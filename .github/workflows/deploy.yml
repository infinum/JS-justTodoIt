name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [16.x]

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Build the application
        run: |
          cd api
          npm ci
          npm run build

      - id: commit
        uses: pr-mpt/actions-commit-hash@v1

      - name: Create release folder
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DOMAIN_STAGING }}
          username: ${{ secrets.USER_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          port: 229
          script: |
            ls -tl ~/www/${{ secrets.DOMAIN_STAGING }}/releases/ | tail -n +4 | awk '{print $9}' | xargs rm -rf {}
            mkdir -p ~/www/${{ secrets.DOMAIN_STAGING }}/releases/${{ steps.commit.outputs.short }}

      - name: Copy deployment to staging
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr
          path: api/dist/
          remote_path: /home/${{ secrets.USER_STAGING }}/www/${{ secrets.DOMAIN_STAGING }}/releases/${{ steps.commit.outputs.short }}/
          remote_host: ${{ secrets.DOMAIN_STAGING }}
          remote_port: 229
          remote_user: ${{ secrets.USER_STAGING }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}

      - name: Deploy to staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DOMAIN_STAGING }}
          username: ${{ secrets.USER_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          port: 229
          script: |
            cd www/${{ secrets.DOMAIN_STAGING }}/releases/${{ steps.commit.outputs.short }}
            npm ci
            cd ~/www/${{ secrets.DOMAIN_STAGING }}
            ln -nfs releases/${{ steps.commit.outputs.short }}/ current

      - name: Import Secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            js/js-api-onboarding/staging secrets | staging_secrets ;

      - name: Add secrets to staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DOMAIN_STAGING }}
          username: ${{ secrets.USER_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          port: 229
          script: |
            cd www/${{ secrets.DOMAIN_STAGING }}/current/
            echo "::add-mask::${{ env.staging_secrets }}" > .env
            passenger-config restart-app ~/www/${{ secrets.DOMAIN_STAGING }}/current